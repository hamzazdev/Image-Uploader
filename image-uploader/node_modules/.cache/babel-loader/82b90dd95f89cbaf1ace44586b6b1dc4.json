{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hamza/Projects/image-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hamza/Projects/image-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hamza/Projects/image-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import BackgroundBox from'./components/BackgroundBox';import Upload from'./components/Upload';import Uploading from'./components/Uploading';import Share from'./components/Share';import{Switch,Route}from\"react-router-dom\";var App=function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),imageUrl=_useState2[0],setImageUrl=_useState2[1];var uploadImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var image,url,formData,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:image=_args.length>0&&_args[0]!==undefined?_args[0]:{};url=_args.length>1&&_args[1]!==undefined?_args[1]:'/imageUpload';formData=new FormData();//Sends image as part of from data to avoid wierd Boundry issues when sending multipart/form data when not part of an actual form\nformData.append('newPhoto',image);fetch(url,{method:'POST',body:formData}).then(function(response){return response.json();}).then(function(_ref2){var url=_ref2.url;return setImageUrl(url);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function uploadImage(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(BackgroundBox,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/uploading\",children:/*#__PURE__*/_jsx(Uploading,{})}),/*#__PURE__*/_jsx(Route,{path:\"/share\",children:/*#__PURE__*/_jsx(Share,{imageUrl:imageUrl})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(Upload,{uploadImage:uploadImage})})]})});};export default App;","map":{"version":3,"sources":["/Users/hamza/Projects/image-uploader/src/App.js"],"names":["React","useState","BackgroundBox","Upload","Uploading","Share","Switch","Route","App","imageUrl","setImageUrl","uploadImage","image","url","formData","FormData","append","fetch","method","body","then","response","json"],"mappings":"siBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACkBP,QAAQ,EAD1B,wCACPQ,QADO,eACGC,WADH,eAGd,GAAMC,CAAAA,WAAW,0FAAG,0KAAOC,KAAP,+CAAe,EAAf,CAAmBC,GAAnB,+CAAyB,cAAzB,CACVC,QADU,CACC,GAAIC,CAAAA,QAAJ,EADD,CACgB;AAChCD,QAAQ,CAACE,MAAT,CAAgB,UAAhB,CAA4BJ,KAA5B,EACAK,KAAK,CAACJ,GAAD,CAAM,CACPK,MAAM,CAAE,MADD,CAEPC,IAAI,CAAEL,QAFC,CAAN,CAAL,CAICM,IAJD,CAIM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAJd,EAKCF,IALD,CAKM,mBAAGP,CAAAA,GAAH,OAAGA,GAAH,OAAaH,CAAAA,WAAW,CAACG,GAAD,CAAxB,EALN,EAHgB,sDAAH,kBAAXF,CAAAA,WAAW,0CAAjB,CAWA,mBACI,KAAC,aAAD,wBACI,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,uBACI,KAAC,SAAD,IADJ,EADJ,cAII,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,uBACI,KAAC,KAAD,EAAO,QAAQ,CAAEF,QAAjB,EADJ,EAJJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACI,KAAC,MAAD,EAAQ,WAAW,CAAEE,WAArB,EADJ,EAPJ,GADJ,EADJ,CAgBH,CA9BD,CAgCA,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport BackgroundBox from './components/BackgroundBox'\nimport Upload from './components/Upload'\nimport Uploading from './components/Uploading'\nimport Share from './components/Share'\nimport { Switch, Route} from \"react-router-dom\";\n\nconst App = () => {\n    const [imageUrl, setImageUrl] = useState()\n    \n    const uploadImage = async (image = {}, url = '/imageUpload') => {\n        const formData = new FormData() //Sends image as part of from data to avoid wierd Boundry issues when sending multipart/form data when not part of an actual form\n        formData.append('newPhoto', image)\n        fetch(url, {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => response.json())\n        .then(({ url }) => setImageUrl(url))\n    }\n\n    return (\n        <BackgroundBox>\n            <Switch>\n                <Route path='/uploading'>\n                    <Uploading />\n                </Route>\n                <Route path='/share'>\n                    <Share imageUrl={imageUrl} />\n                </Route>\n                <Route path='/'>\n                    <Upload uploadImage={uploadImage} />\n                </Route>\n            </Switch>\n        </BackgroundBox>\n    )\n\n}\n\nexport default App\n "]},"metadata":{},"sourceType":"module"}